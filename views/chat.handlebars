<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    const socket = io();
    socket.on('receiveMessage', (data) => {
      const messageList = document.getElementById('messages');
      const messageItem = document.createElement('li');
      messageItem.classList.add('p-2', 'rounded', 'mb-2', 'max-w-xs', 'break-words');
      if (data.sender === '{{user.username}}') {
        messageItem.classList.add('bg-blue-500', 'text-white', 'self-end', 'ml-auto');
      } else {
        messageItem.classList.add('bg-gray-200', 'text-black', 'self-start', 'mr-auto');
      }
      messageItem.textContent = `${data.sender}: ${data.message}`;
      messageList.appendChild(messageItem);
    });

    function sendMessage() {
      const messageInput = document.getElementById('message');
      const receiverId = document.getElementById('receiverId').value;
      const message = messageInput.value;
      if (receiverId && message) {
        socket.emit('sendMessage', { sender: '{{user.username}}', message });
        fetch('/chat/messages', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ receiverId, message })
        }).then(response => {
          if (!response.ok) {
            alert('Failed to send message');
          }
        }).catch(error => {
          console.error('Error:', error);
        });
        messageInput.value = '';
      } else {
        alert('Please select a user and enter a message.');
      }
    }

    function selectUser(userId, username) {
      document.getElementById('receiverId').value = userId;
      document.getElementById('chatWith').textContent = `Chat with: ${username}`;
      document.getElementById('welcomeMessage').classList.add('hidden');
      document.getElementById('chatContainer').classList.remove('hidden');
      localStorage.setItem('selectedUser', JSON.stringify({ userId, username }));
    }

    function loadSelectedUser() {
      const selectedUser = JSON.parse(localStorage.getItem('selectedUser'));
      if (selectedUser) {
        selectUser(selectedUser.userId, selectedUser.username);
      }
    }

    window.onload = loadSelectedUser;
  </script>
</head>
<body class="bg-gray-100 p-4">
  <div class="container mx-auto bg-white shadow-lg rounded-lg p-6">
    <h1 class="text-3xl font-bold mb-4 text-center">Welcome, {{user.username}}</h1>
    <div class="text-right mb-4">
      <a href="/auth/logout" class="text-blue-500 hover:underline">Logout</a>
    </div>
    <div class="flex">
      <!-- Users Section -->
      <div class="w-1/3 pr-4 border-r border-gray-300">
        <h2 class="text-2xl font-semibold mb-4">Users</h2>
        <ul class="list-disc pl-5 space-y-2">
          {{#each users}}
            <li><a href="#" onclick="selectUser('{{this.id}}', '{{this.username}}')" class="text-blue-500 hover:underline">{{this.username}}</a></li>
          {{/each}}
        </ul>
      </div>
      <!-- Chat Section -->
      <div class="w-2/3 pl-4">
        <div id="welcomeMessage" class="text-center text-gray-500">
          Welcome, {{user.username}}! Please choose someone to talk to.
        </div>
        <div id="chatContainer" class="hidden">
          <h2 id="chatWith" class="text-2xl font-semibold mb-4">Chat</h2>
          <ul id="messages" class="flex flex-col space-y-2 mb-4 h-64 overflow-y-auto bg-gray-50 p-4 border border-gray-300 rounded">
            {{#each messages}}
              <li class="p-2 rounded max-w-xs break-words {{#ifCond this.sender ../user.username}}bg-blue-500 text-white self-end ml-auto{{else}}bg-gray-200 text-black self-start mr-auto{{/ifCond}}">
                {{this.sender}}: {{this.message}}
              </li>
            {{/each}}
          </ul>
          <input type="hidden" id="receiverId">
          <div class="flex items-center">
            <input type="text" id="message" placeholder="Type a message" class="border border-gray-300 p-2 flex-grow mr-2 rounded">
            <button onclick="sendMessage()" class="bg-blue-500 text-white p-2 rounded">Send</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
</html>
